// This is your Prisma schema file.

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

// ENUMS
enum UserRole {
  SHOPPER
  VENDOR
  ADMIN
}

enum VendorStatus {
  PENDING_APPROVAL
  ACTIVE
  SUSPENDED
}

// MODELS
model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?
  role          UserRole  @default(SHOPPER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  vendor        Vendor?
  orders        Order[]
  feedback      Feedback[]
  loyaltyPoints PointsLedger[]
}

model Vendor {
  id                String   @id @default(cuid())
  userId            String   @unique
  user              User     @relation(fields: [userId], references: [id])
  businessName      String
  status            VendorStatus @default(PENDING_APPROVAL)
  
  services          Service[]
  feedbackReceived  Feedback[]
  pointsIssued      PointsLedger[]
}

model Service {
  id          String   @id @default(cuid())
  vendorId    String
  vendor      Vendor   @relation(fields: [vendorId], references: [id])
  title       String
  description String
  price       Float
  
  orderItems  OrderItem[]
}

model Order {
  id        String      @id @default(cuid())
  userId    String
  user      User        @relation(fields: [userId], references: [id])
  total     Float
  createdAt DateTime    @default(now())
  
  items     OrderItem[]
}

model OrderItem {
  id        String  @id @default(cuid())
  orderId   String
  order     Order   @relation(fields: [orderId], references: [id])
  serviceId String
  service   Service @relation(fields: [serviceId], references: [id])
  quantity  Int
  price     Float
}

model PointsLedger {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  vendorId  String
  vendor    Vendor   @relation(fields: [vendorId], references: [id])
  points    Int
  reason    String
  createdAt DateTime @default(now())
}

model Feedback {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  vendorId  String
  vendor    Vendor   @relation(fields: [vendorId], references: [id])
  rating    Int
  comment   String?
  createdAt DateTime @default(now())
}